openapi: 3.0.0
info:
   title: Proximity Channel - REST API
   description: Proximity Channel - REST API
   version: 2.9.3
   contact: {}
servers:
-  url: http://localhost:8080/api/v1
paths:
#### Clienti ####
   /clienti:
      post:
         summary: Crea cliente
         description: Creazione di un nuovo cliente in banca dati
         operationId: creaCliente
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'         
         requestBody:
            description: Oggetto cliente
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/CreaCliente'
         responses:
            '201':
               description: Cliente creato
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ClienteCreato'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
                        dettaglio: [Campo 'cognome' mancante o non valido, Campo 'codice_fiscale' mancante o non valido]
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata   
         tags:
         - cliente
   /clienti/{codiceFiscale}:
      get:
         operationId: getByCodiceFiscale
         summary: Recupera informazioni cliente tramite codice identificativo
         description: Recupera informazioni cliente tramite codice identificativo
         parameters:
         -  name: codiceFiscale
            in: path
            required: true
            description: Codice identificativo cliente
            schema:
               type: string
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'
         responses:
            '200':
               description: Cliente trovato
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Cliente'
            '404':
               description: Cliente non trovato
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '404'
                        messaggio: Cliente con codice fiscale 'AA12345667BP' non trovato
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - cliente
   /clienti/{codiceCliente}:
      put:
         summary: Aggiorna cliente
         description: Aggiorna cliente
         parameters:
         -  name: codiceCliente
            in: path
            required: true
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/AggiornaCliente'
         operationId: aggiornaCliente
         responses:
            '204':
               description: Cliente aggiornato
            '404':
               description: Cliente non trovato
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '404'
                        messaggio: Cliente 12345667 non trovato
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - cliente
#### Check ####
   /check/iban:
      post:
         summary: Verifica codice IBAN
         description: 'Controllo formale dell’IBAN passato e della sua inclusione o meno nella black-list dei codici IBAN'
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'         
         operationId: checkIban
         requestBody:
            description: ''
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/CheckIban'
         responses:
            '200':
               description: Controllo eseguito
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Esito'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
                        dettaglio: Campo 'IBAN' mancante o non valido
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  

         tags:
         - check
   /check/garanzia:
      post:
         summary: Check garanzia
         description: 'Verifica garanzie di un determinato cliente'
         operationId: checkGaranzia
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'         
         requestBody:
            description: ''
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/CheckGaranzia'
         responses:
            '200':
               description: Controllo eseguito
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Esito'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
                        dettaglio: Campo 'codice_fiscale' mancante o non valido  
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  

         tags:
         - check
   /check/garanzia-deferred:
      post:
         summary: Check garanzia deferred
         description: 'Verifica garanzie di un determinato cliente in maniera approfondita'
         operationId: checkGaranziaDeferred
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'          
         requestBody:
            description: ''
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/CheckGaranziaDeferred'
         responses:
            '200':
               description: Check eseguito
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Esito'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - check         
   /check/targa:
      post:
         summary: Check targa
         description: Permette di eseguire i controlli formali di validità della targa fornita
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'          
         operationId: checkTarga
         requestBody:
            description: ''
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/CheckTarga'
         responses:
            '200':
               description: Check eseguito
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Esito'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - check         
   /check/modulo:
      post:
         summary: Check modulo
         description: 'Verifica che il numero modulo fornito dal cliente sia corretto e permetta di attivare un contratto'
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'        
         operationId: checkModulo
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/CheckModulo'
         responses:
            '200':
               description: Check eseguito
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Esito'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - check
   /check/coupon:
      post:
         summary: Servizio check coupon
         description: Servizio check coupon
         operationId: checkCoupon
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'         
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                    $ref: '#/components/schemas/CheckCoupon'                  
         responses:
            '200':
               description: Check riuscito
               content:
                  application/json:
                    schema:
                          $ref: '#/components/schemas/EsitoCheckCoupon'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata
         tags:
         - check         
#### Contratti ###
   /contratti:
      post:
         summary: Attivazione contratto
         description: Attiva contratto in base al tipo
         operationId: attivazioneContratto
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'         
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/AttivazioneContratto'
         responses:
            '201':
               description: Contratto creato
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/ContrattoCreato'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata     
         tags:
         - contratto
   /contratti/{id}:
      get:
         summary: Ricerca contratto tramite codice identificativo
         description: Restituisce i dati del contratto e dei dispositivi associati
         parameters:
         -  name: id
            in: path
            required: true
            description: Codice identificativo contratto
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'             
         operationId: getDettaglioContratto
         responses:
            '200':
               description: Dettaglio contratto
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/DettaglioContratto'
            '404':
               description: Contratto 12345 non trovato
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '404'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - contratto
   /contratti/{id}/opzioni:
      post:
         summary: Attivazione opzioni per un titolo
         description: Attivazione opzioni per un titolo
         operationId: attivaOpzioni
         parameters:
         -  name: id
            in: path
            required: true
            description: Codice identificativo contratto
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'             
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/AttivazioneOpzioni'
         responses:
            '201':
               description: Attivazione riuscita
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/OpzioneAttivata'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata     
         tags:
         - contratto       
   /contratti/{id}/dispositivi:
      post:
         summary: Aggiungi dispositivo telepass
         description: Aggiungi dispositivo telepass
         operationId: aggiungiTelepass
         parameters:
         -  name: id
            in: path
            required: true
            description: Codice identificativo contratto
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'             
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/AggiungiTelepass'
         responses: 
            '201':
               description: Attivazione riuscita
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/TelepassAggiunto'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - contratto
   /contratti/{id}/dispositivi/sostituzioni:
      post:
         summary: Effettua sostituzione dispositivo telepass
         description: Effettua sostituzione dispositivo telepass telepass
         operationId: sostituisciTelepass
         parameters:
         -  name: id
            in: path
            required: true
            description: Codice identificativo contratto
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'           
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/SostituzioneApparato'
         responses:
            '201':
               description: Attivazione riuscita
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/ApparatoSostituito'
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - contratto
   /contratti/{id}/dispositivi/disattivazione:
      post:
         summary: Effettua disattivazione dispositivo telepass
         description: Effettua disattivazione dispositivo telepass telepass
         operationId: disattivaTelepass
         parameters:
         -  name: id
            in: path
            required: true
            description: Codice identificativo contratto
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'           
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/DisattivazioneApparato'
         responses:
            '204':
               description: ''
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - contratto             
   /contratti/{id}/opzioni/disattivazione:
      post:
         summary: Effettua disattivazione opzione
         description: Effettua disattivazione opzione
         operationId: disattivaOpzione
         parameters:
         -  name: id
            in: path
            required: true
            description: Codice identificativo contratto
            schema:
               type: integer
               format: int64
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'           
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/DisattivazioneOpzione'
         responses:
            '204':
               description: ''            
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata  
         tags:
         - contratto             
#### Firme Contratti ###
   /contratti/firmati:
      post:
         summary: Processa notifica ricezione contratto
         description: Processa ricezione firma digitale
         operationId: getFirmaContratto
         parameters:
         -  $ref: '#/components/parameters/idGestore'
         -  $ref: '#/components/parameters/idEnteResponsabile'
         -  $ref: '#/components/parameters/idPostazione'         
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/ContrattoFirmato'
         responses:
            '202':
               description: Richiesta accettata
            '400':
               description: Richiesta errata, prego riprovare
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '400'
                        messaggio: Richiesta errata, prego riprovare
            '500':
               description: Errore server
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '500'
                        messaggio: Si è verificato un errore prego riprovare 
            '401':
               description: Richiesta non autenticata
               content:
                  application/json:
                     schema:
                          $ref: '#/components/schemas/Errore'
                     example:
                        codice: '401'
                        messaggio: Richiesta non autenticata     
         tags:
         - contratto
components:
   links: {}
   callbacks: {}
   schemas:
    AggiornaCliente:
      type: object
      properties:
        nome:
          type: string
          minLength: 1
          maxLength: 30
          example: Giuseppe
        cognome:
          type: string
          minLength: 1
          maxLength: 30
          example: Rossi
        ragione_sociale:
          type: string
          minLength: 4
          maxLength: 60
          example: Azienda Srl
        forma_giuridica:
          type: string
          minLength: 2
          maxLength: 5
          example: PF
        indirizzo:
         $ref: '#/components/schemas/Indirizzo'
        email:
         $ref: '#/components/schemas/Email'
        cellulare:
         $ref: '#/components/schemas/Cellulare'
    AggiungiTelepass:
      type: object
      properties:
        codice_cliente:
          type: integer
          example: int64
        codice_apparato:
          type: string
          example: 112311567
        targhe:
          type: array
          items:
            $ref: '#/components/schemas/Targa'
        indirizzo_spedizione:
         $ref: '#/components/schemas/Indirizzo'
        assicurazione_attiva:
          type: boolean
          example: false
        coupon:
          type: string
          minLength: 2
          maxLength: 10
          example: od76YshK
        tipo_opzione:
          type: string
          minLength: 2
          maxLength: 5
          example: tlp1
        tipo:
          type: string
          minLength: 2
          maxLength: 5
          example: tlp1
      required:
        - codice_cliente
        - codice_apparato
        - targa
    AttivazioneContratto:
      type: object
      properties:
        codice_cliente:
          type: integer
          format: int64
          example: 36834689
        tipo_prodotto:
          type: string
          description: "fa= family, nf=new family"
          minLength: 2
          maxLength: 5
          example: FA
        tipo_apertura:
          type: string
          example: A
        documento_identita:
         $ref: '#/components/schemas/DocumentoIdentita'
        titoli:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Titolo'
        consensi:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Consenso'
        spedizione:
         $ref: '#/components/schemas/Indirizzo'
        codice_rid:
         $ref: '#/components/schemas/CodiceRID'
        iban:
          type: string
          minLength: 5
          maxLength: 34
          example: IT58S0300203280757323978341
        tipo_carta_pagamento:
          type: string
          minLength: 1
          maxLength: 5
          example: CC
        numero_modulo:
          type: string
          minLength: 12
          maxLength: 12
          example: I01234567890
      required:
        - codice_cliente
        - tipo_prodotto
        - tipo_apertura
        - documento_identita
        - titoli
        - consensi
    AttivazioneOpzioni:
      type: object
      properties:
        assicurazione_attiva:
          type: boolean
          example: true
        tipo_opzione:
          type: string
          example: PA          
        codice_titolo:
          type: integer
          format: int64
          example: 22343
        coupon:
          type: string
          minLength: 2
          maxLength: 10
          example: od76YshK
        codice_promozione:
          type: string
          minLength: 2
          maxLength: 10
          example: tlp1
    Cellulare:
      type: object
      properties:
        numero:
          type: string
          minLength: 1
          maxLength: 16
          example: "+393333333333"
        certificato:
          type: boolean
          example: false
      required:
        - numero
        - certificato
    CheckCoupon:
      type: object
      properties:
        codice_tipo_titolo:
          type: string
          minLength: 2
          maxLength: 5
          example: at
        codice_coupon:
          type: string
          minLength: 2
          maxLength: 10
          example: od76YshK
        primo_apparato:
          type: boolean
          example: true
        codice_tipo_contratto:
          type: string
          minLength: 2
          maxLength: 5
          example: fa
      required:
        - codice_coupon
        - primo_apparato
        - codice_tipo_contratto
        - codice_tipo_titolo
    CheckGaranzia:
      type: object
      properties:
        codice_fiscale:
          type: string
          minLength: 11
          maxLength: 16
          example: MMMGGG05S64G876P
        nome:
          type: string
          minLength: 1
          maxLength: 30
          example: Giuseppe
        codice_prodotto:
          type: string
          example: FA
        codice_tipo_apertura:
          type: string
          minLength: 1
          maxLength: 5
          example: A
        cognome:
          type: string
          minLength: 1
          maxLength: 30
          example: Rossi
      required:
        - codice_fiscale
        - nome
        - codice_prodotto
        - codice_tipo_apertura
        - cognome
    CheckGaranziaDeferred:
      type: object
      properties:
        codice_fiscale:
          type: string
          minLength: 11
          maxLength: 16
          example: MMMGGG05S64G876P
        nome:
          type: string
          minLength: 1
          maxLength: 30
          example: Giuseppe
        cognome:
          type: string
          minLength: 1
          maxLength: 30
          example: Rossi
      required:
        - codice_fiscale
        - nome
        - cognome
    CheckIban:
      type: object
      properties:
        iban:
          type: string
          minLength: 1
          maxLength: 60
          example: IT60X0542811101000000123456
      required:
        - iban
    CheckModulo:
      type: object
      properties:
        codice_cliente:
          type: integer
          format: int64
          example: 12345678
        codice_modulo:
          type: string
          minLength: 12
          maxLength: 12
          example: II1234567891
      required:
        - codice_modulo
    CheckTarga:
      type: object
      properties:
        targa:
         $ref: '#/components/schemas/Targa'
      required:
        - targa
    Cliente:
      type: object
      properties:
        codice_cliente:
          type: integer
          format: int64
          example: 123456789
        codice_fiscale:
          type: string
          description: "Obbligatorio se forma giuridica persona fisica"
          example: XXXMMM80A01D789P
        cognome:
          type: string
          minLength: 1
          maxLength: 30
          example: Rossi
        nome:
          type: string
          minLength: 1
          maxLength: 30
          example: Giuseppe
        forma_giuridica:
          type: string
          example: Persona Fisica
        nazionalita:
          type: string
          example: Italia
        partita_iva:
          type: string
          description: "Obbligatorio se forma giuridica"
          example: 12345678901
        ragione_sociale:
          type: string
          example: Azienda srl
        indirizzo:
         $ref: '#/components/schemas/Indirizzo'
        sesso:
          type: string
          example: M
        data_nascita:
          type: string
          format: date
        cellulare:
         $ref: '#/components/schemas/Cellulare'
        email:
         $ref: '#/components/schemas/Email'
        stato:
          type: string
          example: Regolare
        elenco_contratti:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Contratto'
      required:
        - codice_fiscale
        - nazionalita
        - cognome
        - nome
        - forma_giuridica
        - indirizzo
        - stato
    ClienteCreato:
      type: object
      properties:
        codice_cliente:
          type: integer
          format: int64
          example: 123456789
      required:
        - codice_cliente
    CodiceRID:
      type: object
      properties:
        codice_autorizzazione_gt:
          type: string
          description: "Obbligatorio se tipo_transazione contiene uno dei valori seguenti: Pagamento o Domiciliazione in caso di operazione effettuata con carta di Credito o Debito Internazionale"
          example: 738143
        codice_autorizzazione_rid:
          type: string
          description: "Obbligatorio se tipo_transazione è di tipo Domiciliazione"
          example: 0020332103543044587
        codice_sia:
          type: string
          description: "Preente se tipo_transazione è di tipo Domiciliazione e pagamento con carta"
          example: 12345
        codice_abi:
          type: string
          description: "Presente se tipo_transazione è di tipo Domiciliazione e pagamento con conto"
          example: 12345
        tipologia_carta:
          type: string
          description: "Obbligatorio se tipo_transazione è di tipo Domiciliazione"
          example: B
        hash_pan:
          type: string
          description: "Obblgatorio per Domiciliazione con carte di credito"
          example: I6ykbOVN9YgVJy8lM1TkSEeIQqoQGfGLeIo2Q4
    Consenso:
      type: object
      properties:
        codice:
          type: string
          description: "md = marketing indiretti, pr = profilazione, t1 =  servizio memo 1, t2 = servizio memo 2"
          example: md
        valore:
          type: boolean
          example: true
      required:
        - codice
        - valore
    Contratto:
      type: object
      properties:
        codice_interno:
          type: integer
          format: int64
          example: 1230994
        codice_cliente:
          type: integer
          format: int64
          example: 1230994
        tipo_prodotto:
         $ref: '#/components/schemas/TipoProdotto'
        tipo:
         $ref: '#/components/schemas/TipoContratto'         
        codice_modulo:
          type: string
          minLength: 12
          maxLength: 12
          example: I12345678911
        codice_contratto:
          type: integer
          format: int64
          example: 1230094
        codice_utente:
          type: integer
          format: int64
          example: 123456789
        nickname:
          type: string
          example: g.rossi
        data_chiusura:
          type: string
          format: date
        data_apertura:
          type: string
          format: date
        stato:
         $ref: '#/components/schemas/StatoContratto'
        matricola:
          type: string
          example: A4566278
        modalita_pagamento:
         $ref: '#/components/schemas/ModalitaPagamento'
      required:
        - codice_interno
        - codice_modulo
        - codice_utente
        - data_apertura
        - stato
        - matricola
        - modalita_pagamento
    ContrattoCreato:
      type: object
      properties:
        codice_contratto:
          type: integer
          format: int64
          example: 123456789
      required:
        - codice_contratto
    ContrattoFirmato:
      type: object
      properties:
        contratto:
          type: string
          example: base64
        tipo_documento:
          type: string
          example: AT
        codice_contratto:
          type: integer
          format: int64
        numero_modulo:
          type: string
          description: 'Obbligatorio se tipo_documento = UCT'
        codice_titolo:
          type: integer
          format: int64                  
          description: 'Obbligatorio se tipo_documento = UCT'          
      required:
        - tipo_documento
        - codice_contratto
    CreaCliente:
      type: object
      properties:
        codice_fiscale:
          type: string
          description: "Obbligatorio per persone fisiche"
          minLength: 11
          maxLength: 16
          example: GRSS0123456649P
        cognome:
          type: string
          minLength: 1
          maxLength: 30
          example: Rossi
        nome:
          type: string
          minLength: 1
          maxLength: 30
          example: Giuseppe
        forma_giuridica:
          type: string
          minLength: 2
          maxLength: 3
          example: PF
        nazionalita:
          type: string
          minLength: 2
          maxLength: 2
          example: IT
        partita_iva:
          type: string
          description: "Obbligatorio per persone giuridiche"
          minLength: 11
          maxLength: 16
          example: IT1228473262222
        ragione_sociale:
          type: string
          description: "Obbligatorio per soggetti con partita iva"
          minLength: 1
          maxLength: 60
          example: Azienda SRL
        indirizzo:
         $ref: '#/components/schemas/Indirizzo'
        cellulare:
         $ref: '#/components/schemas/Cellulare'
        email:
         $ref: '#/components/schemas/Email'
      required:
        - cognome
        - nome
        - forma_giuridica
        - indirizzo
    DettaglioContratto:
      type: object
      properties:
        documento_associato:
          type: boolean
          example: true
        contratto:
         $ref: '#/components/schemas/Contratto'
        attivazione_dispositivo_aggiuntivo:
          type: boolean
          example: true
        dispositivi:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Dispositivo'
        data_associazione_documento:
          type: string
          format: date
      required:
        - documento_associato
        - contratto
    Dispositivo:
      type: object
      properties:
        codice_titolo:
          type: integer
          format: int64
          example: 12346677
        stato_autorizzazione:
         $ref: '#/components/schemas/StatoAutorizzazione'
        codice_apparato:
          type: string
          example: 12345678
        coupon:
          type: string
          example: 12345678
        stato:
         $ref: '#/components/schemas/StatoApparato'
        tipo:
         $ref: '#/components/schemas/Tipo'
        dispositivo_principale:
          type: boolean
          example: true
        assicurazione_attiva:
          type: boolean
          example: true
        targhe:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Targa'
        lista_opzioni:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Opzione'            
      required:
        - codice_titolo
        - stato_autorizzazione
        - codice_apparato
        - stato
        - tipo
    DocumentoIdentita:
      type: object
      properties:
        tipo_documento:
          type: string
          example: PA
        numero:
          type: string
          example: 1234567
        data_rilascio:
          type: string
          format: date
        ente_rilascio:
          type: string
          example: Comune
        localita_rilascio:
          type: string
          example: Roma
        nazione:
          type: string
          minLength: 2
          maxLength: 2
          example: IT
        data_scadenza:
          type: string
          format: date
        scansione:
         $ref: '#/components/schemas/Scansione'
      required:
        - tipo_documento
        - numero
        - data_rilascio
        - ente_rilascio
        - localita_rilascio
        - nazione
        - data_scadenza
        - scansione
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 3
          maxLength: 320
          example: g.rossi@dominio.com
        certificato:
          type: boolean
          example: true
      required:
        - email
        - certificato
    Errore:
      type: object
      properties:
        codice:
          type: string
          example: 1
        messaggio:
          type: string
          example: Si è verificato un errore
        dettaglio:
          type: array
          uniqueItems: true
          items:
           type: string
          example: Campo 'cognome' mancante o non valido
      required:
        - codice
    Esito:
      type: object
      properties:
        esito:
          type: string
          example: ok
        messaggio:
          type: string
    EsitoCheckCoupon:
      type: object
      properties:
        promozioni:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Promozione'
    Indirizzo:
      type: object
      properties:
        denominazione:
          type: string
          minLength: 1
          maxLength: 60
          example: Giuseppe Rossi
        cap:
          type: string
          minLength: 5
          maxLength: 10
          example: "10010"
        provincia:
          type: string
          description: "Obbligatorio solo se nazione Italia"
          minLength: 2
          maxLength: 2
          example: MI
        nazione:
          type: string
          description: "Codice nazione formato ISO alpha 2"
          minLength: 2
          maxLength: 2
          example: IT
        indirizzo:
          type: string
          maxLength: 60
          example: Via Roma 14
        citta:
          type: string
          minLength: 2
          maxLength: 30
          example: Milano
      required:
        - nazione
        - indirizzo
        - citta
        - cap
    ModalitaPagamento:
      type: object
      properties:
        codice:
          type: string
          maxLength: 1
          example: 1
        descrizione:
          type: string
          minLength: 1
          maxLength: 50
          example: convenzione plus
    Promozione:
      type: object
      properties:
        codice:
          type: string
          example: TLP12355
        descrizione:
          type: string
          example: Promozione 1
        tipo:
          type: string          
        inizio:
          type: string
          format: date        
        fine:
          type: string
          format: date            
    Scansione:
      type: object
      properties:
        contenuto_fronte:
          type: string
          description: "Contenuto file in formato Base64"
          example: mdhjfbvhjfh==
        mime_type_fronte:
          type: string
          description: "Formato file scansionato (es. pdf)"
          example: pdf
        contenuto_retro:
          type: string
          description: "Contenuto file in formato Base64"
          example: mdhjfbvhjfh==
        mime_type_retro:
          type: string
          description: "Formato file scansionato (es. pdf)"
          example: pdf
      required:
        - contenuto_fronte
        - mime_type_fronte
        - contenuto_retro
        - mime_type_retro
    SostituzioneApparato:
      type: object
      properties:
        codice_vecchio_apparato:
          type: integer
          format: int64
          example: 11002
        codice_nuovo_apparato:
          type: integer
          format: int64
          example: 890023341
        tipo_opzione:
          type: string
          minLength: 2
          maxLength: 2
          example: PA
        codice_promozione:
          type: string
          example: tlp1
        assicurazione_attiva:
          type: boolean
          example: true
        coupon:
          type: string
          minLength: 2
          maxLength: 10
          example: od76YshK
      required:
        - codice_vecchio_apparato
        - codice_nuovo_apparato
    StatoApparato:
      type: object
      x-go-name: StatoApparatoDto
      properties:
        codice:
          type: string
          maxLength: 1
          example: 4
        descrizione:
          type: string
          minLength: 1
          maxLength: 50
          example: "1"
    StatoAutorizzazione:
      type: object
      properties:
        codice:
          type: string
          minLength: 1
          maxLength: 2
          example: 14
        descrizione:
          type: string
          minLength: 1
          maxLength: 50
          example: S scaduto termine ripristino
    StatoContratto:
      type: object
      properties:
        codice:
          type: string
          minLength: 1
          maxLength: 2
          example: 10
        descrizione:
          type: string
          minLength: 1
          maxLength: 50
          example: in attesa di completamento
    Targa:
      type: object
      properties:
        numero:
          type: string
          minLength: 6
          maxLength: 7
          example: EF34343
        codice_nazione:
          type: string
          minLength: 2
          maxLength: 2
          example: IT
      required:
        - numero
        - codice_nazione
    TelepassAggiunto:
      type: object
      properties:
        codice:
          type: integer
          format: int64
          example: 123456789
        numero_modulo:
          type: string
          example: 123456789012
    Tipo:
      type: object
      properties:
        codice:
          type: string
        descrizione:
          type: string
    TipoContratto:
      type: object
      properties:
        codice:
          type: string
          example: FA
        descrizione:
          type: string
          example: Family
    TipoProdotto:
      type: object
      properties:
        codice:
          type: string
          example: OR
        descrizione:
          type: string
          example: ordinario
    Titolo:
      type: object
      properties:
        codice_apparato:
          type: string
          example: 12345678
        stato_apparato:
          type: string
          description: "01 distribuito, 02 = non distribuito, 03 = smarrito/rubato, 04 spedito"
          example: spedito
        tipo_apparato:
          type: string
          description: "am= telepass europeo, at = apparato telepass"
          example: AM
        assicurazione_attiva:
          type: boolean
          example: true
        tipo_opzione:
          type: string
          example: PA
        coupon:
          type: string
          minLength: 2
          maxLength: 10
          example: od76YshK
        codice_promozione:
          type: string
          example: tlp1
        targhe:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Targa'
        dispositivo_principale:
          type: boolean
      required:
      - dispositivo_principale
      - targhe
      - codice_apparato
      - tipo_apparato
    TipoOpzione:
      type: object
      properties:
        codice:
          type: string
          example: PA
        descrizione:
          type: string
          example: premium
    Opzione:
      type: object
      properties:
        codice:
          type: string
          example: 12345667
        tipo_opzione:
          $ref: '#/components/schemas/TipoOpzione'
        data_inizio:
          type: string
          format: date
        data_fine:
          type: string
          format: date
    DisattivazioneApparato:
      type: object
      properties:
        codice_titolo:
          type: integer
          format: int64
          example: 547700
      required:
        - codice_titolo
    DisattivazioneOpzione:
      type: object
      properties:
        codice_opzione:
          type: string
          example: "152657"
        data_attivazione:
          type: string
          format: date
        codice_titolo:
          type: integer
          format: int64
          example: 44582      
        disattiva_assicurazione:
          type: boolean
          default: false
      required:
        - codice_titolo
    ApparatoSostituito:
      type: object
      properties:
        numero_modulo:
          type: string
          example: 123456789012
    OpzioneAttivata:
      type: object
      properties:
        numero_modulo:
          type: string
          example: 123456789012
   parameters:
        idEnteResponsabile:
           in: header
           name: X-Telepass-Id-Ente-Responsabile
           required: true
           schema:
              type: string
              default: '00'
           description: Id dell’Ente Responsabile (assegnato da Telepass) 
        idGestore:
           in: header
           name: X-Telepass-Id-Gestore
           required: true
           schema:
              type: string
           description: Id dell’Ente Gestore (assegnato da Telepass)
        idPostazione:
           in: header
           name: X-Telepass-Id-Postazione
           required: true
           schema:
              type: string
           description: Codice identificativo del Punto di Ritiro        
   securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
tags:
-  name: cliente
   description: Risorsa cliente
-  name: check
   description: Controlli garanzie ed informazioni cliente
-  name: contratto
   description: Risorsa contratto