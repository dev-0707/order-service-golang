// Package orders provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package orders

import (
	"time"
)

const (
	Oauth2Scopes = "oauth2.Scopes"
)

// ConstraintViolation defines model for ConstraintViolation.
type ConstraintViolation struct {
	Status     *float32 `json:"status,omitempty"`
	Title      *string  `json:"title,omitempty"`
	Type       *string  `json:"type,omitempty"`
	Violations *[]struct {
		Field   string `json:"field"`
		Message string `json:"message"`
	} `json:"violations,omitempty"`
}

// Language defines model for Language.
type Language struct {
	UserAgent string `json:"user_agent"`
}

// Order defines model for Order.
type Order struct {
	AcceptLanguage *string    `json:"accept_language,omitempty"`
	Comment        *string    `json:"comment,omitempty"`
	Commission     *float64   `json:"commission,omitempty"`
	CreatedBy      *int64     `json:"created_by,omitempty"`
	CreatedDate    *time.Time `json:"created_date,omitempty"`
	CustomField    *string    `json:"custom_field,omitempty"`
	DateAdded      *time.Time `json:"date_added,omitempty"`
	DateModified   *time.Time `json:"date_modified,omitempty"`
	Email          *string    `json:"email,omitempty"`
	Fax            *string    `json:"fax,omitempty"`
	Firstname      *string    `json:"firstname,omitempty"`
	ForwardedIp    *string    `json:"forwarded_ip,omitempty"`
	InvoiceNo      *int64     `json:"invoice_no,omitempty"`
	InvoicePrefix  *string    `json:"invoice_prefix,omitempty"`
	Ip             *string    `json:"ip,omitempty"`
	IsActive       *bool      `json:"is_active,omitempty"`
	Language       *Language  `json:"language,omitempty"`
	Lastname       *string    `json:"lastname,omitempty"`
	MarketingId    *int64     `json:"marketing_id,omitempty"`
	ModifiedBy     *int64     `json:"modified_by,omitempty"`
	ModifiedDate   *time.Time `json:"modified_date,omitempty"`
	OrderId        *int64     `json:"order_id,omitempty"`
	OrderName      *string    `json:"order_name,omitempty"`
	OrderPrefixId  *string    `json:"order_prefix_id,omitempty"`
	Reward         *int64     `json:"reward,omitempty"`
	Store          *Store     `json:"store,omitempty"`
	Telephone      *string    `json:"telephone,omitempty"`
	Total          *float64   `json:"total,omitempty"`
	UserAgent      *string    `json:"user_agent,omitempty"`
}

// Problem defines model for Problem.
type Problem struct {
	// Detail Ahumanreadableexplanationspecifictothisoccurrenceofthe problemthatishelpfultolocatetheproblemandgiveadviceonhow toproceed.WritteninEnglishandreadableforengineers,usuallynot suitedfornontechnicalstakeholdersandnotlocalized.
	Detail *string `json:"detail,omitempty"`

	// Instance AURIreferencethatidentifiesthespecificoccurrenceoftheproblem, e.g.byaddingafragmentidentifierorsub-pathtotheproblemtype. Maybeusedtolocatetherootofthisprobleminthesourcecode.
	Instance *string `json:"instance,omitempty"`
	Status   *int    `json:"status,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// Store defines model for Store.
type Store struct {
	AcceptLanguage string `json:"accept_language"`
	Comment        string `json:"comment"`
}

// LimitParam defines model for limitParam.
type LimitParam = int

// OffsetParam defines model for offsetParam.
type OffsetParam = int

// SortOrder defines model for sortOrder.
type SortOrder = string

// GetordersParams defines parameters for Getorders.
type GetordersParams struct {
	AcceptLanguage *string      `form:"accept_language,omitempty" json:"accept_language,omitempty"`
	Comment        *string      `form:"comment,omitempty" json:"comment,omitempty"`
	Offset         *OffsetParam `form:"offset,omitempty" json:"offset,omitempty"`
	Limit          *LimitParam  `form:"limit,omitempty" json:"limit,omitempty"`
	Sort           *SortOrder   `form:"sort,omitempty" json:"sort,omitempty"`
}

// CreateOrderJSONRequestBody defines body for CreateOrder for application/json ContentType.
type CreateOrderJSONRequestBody = Order

// UpdateOrderJSONRequestBody defines body for UpdateOrder for application/json ContentType.
type UpdateOrderJSONRequestBody = Order
