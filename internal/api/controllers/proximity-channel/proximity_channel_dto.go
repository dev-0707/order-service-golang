// Package proximity_channel provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package proximity_channel

import (
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// AggiornaCliente defines model for AggiornaCliente.
type AggiornaCliente struct {
	Cellulare      *Cellulare `json:"cellulare,omitempty"`
	Cognome        *string    `json:"cognome,omitempty"`
	Email          *Email     `json:"email,omitempty"`
	FormaGiuridica *string    `json:"forma_giuridica,omitempty"`
	Indirizzo      *Indirizzo `json:"indirizzo,omitempty"`
	Nome           *string    `json:"nome,omitempty"`
	RagioneSociale *string    `json:"ragione_sociale,omitempty"`
}

// AggiungiTelepass defines model for AggiungiTelepass.
type AggiungiTelepass struct {
	AssicurazioneAttiva *bool      `json:"assicurazione_attiva,omitempty"`
	CodiceApparato      string     `json:"codice_apparato"`
	CodiceCliente       int        `json:"codice_cliente"`
	Coupon              *string    `json:"coupon,omitempty"`
	IndirizzoSpedizione *Indirizzo `json:"indirizzo_spedizione,omitempty"`
	Targhe              *[]Targa   `json:"targhe,omitempty"`
	Tipo                *string    `json:"tipo,omitempty"`
	TipoOpzione         *string    `json:"tipo_opzione,omitempty"`
}

// ApparatoSostituito defines model for ApparatoSostituito.
type ApparatoSostituito struct {
	NumeroModulo *string `json:"numero_modulo,omitempty"`
}

// AttivazioneContratto defines model for AttivazioneContratto.
type AttivazioneContratto struct {
	CodiceCliente      int64             `json:"codice_cliente"`
	CodiceRid          *CodiceRID        `json:"codice_rid,omitempty"`
	Consensi           []Consenso        `json:"consensi"`
	DocumentoIdentita  DocumentoIdentita `json:"documento_identita"`
	Iban               *string           `json:"iban,omitempty"`
	NumeroModulo       *string           `json:"numero_modulo,omitempty"`
	Spedizione         *Indirizzo        `json:"spedizione,omitempty"`
	TipoApertura       string            `json:"tipo_apertura"`
	TipoCartaPagamento *string           `json:"tipo_carta_pagamento,omitempty"`

	// TipoProdotto fa= family, nf=new family
	TipoProdotto string   `json:"tipo_prodotto"`
	Titoli       []Titolo `json:"titoli"`
}

// AttivazioneOpzioni defines model for AttivazioneOpzioni.
type AttivazioneOpzioni struct {
	AssicurazioneAttiva *bool   `json:"assicurazione_attiva,omitempty"`
	CodicePromozione    *string `json:"codice_promozione,omitempty"`
	CodiceTitolo        *int64  `json:"codice_titolo,omitempty"`
	Coupon              *string `json:"coupon,omitempty"`
	TipoOpzione         *string `json:"tipo_opzione,omitempty"`
}

// Cellulare defines model for Cellulare.
type Cellulare struct {
	Certificato bool   `json:"certificato"`
	Numero      string `json:"numero"`
}

// CheckCoupon defines model for CheckCoupon.
type CheckCoupon struct {
	CodiceCoupon        string `json:"codice_coupon"`
	CodiceTipoContratto string `json:"codice_tipo_contratto"`
	CodiceTipoTitolo    string `json:"codice_tipo_titolo"`
	PrimoApparato       bool   `json:"primo_apparato"`
}

// CheckGaranzia defines model for CheckGaranzia.
type CheckGaranzia struct {
	CodiceFiscale      string `json:"codice_fiscale"`
	CodiceProdotto     string `json:"codice_prodotto"`
	CodiceTipoApertura string `json:"codice_tipo_apertura"`
	Cognome            string `json:"cognome"`
	Nome               string `json:"nome"`
}

// CheckGaranziaDeferred defines model for CheckGaranziaDeferred.
type CheckGaranziaDeferred struct {
	CodiceFiscale string `json:"codice_fiscale"`
	Cognome       string `json:"cognome"`
	Nome          string `json:"nome"`
}

// CheckIban defines model for CheckIban.
type CheckIban struct {
	Iban string `json:"iban"`
}

// CheckModulo defines model for CheckModulo.
type CheckModulo struct {
	CodiceCliente *int64 `json:"codice_cliente,omitempty"`
	CodiceModulo  string `json:"codice_modulo"`
}

// CheckTarga defines model for CheckTarga.
type CheckTarga struct {
	Targa Targa `json:"targa"`
}

// Cliente defines model for Cliente.
type Cliente struct {
	Cellulare     *Cellulare `json:"cellulare,omitempty"`
	CodiceCliente *int64     `json:"codice_cliente,omitempty"`

	// CodiceFiscale Obbligatorio se forma giuridica persona fisica
	CodiceFiscale   string              `json:"codice_fiscale"`
	Cognome         string              `json:"cognome"`
	DataNascita     *openapi_types.Date `json:"data_nascita,omitempty"`
	ElencoContratti *[]Contratto        `json:"elenco_contratti,omitempty"`
	Email           *Email              `json:"email,omitempty"`
	FormaGiuridica  string              `json:"forma_giuridica"`
	Indirizzo       Indirizzo           `json:"indirizzo"`
	Nazionalita     string              `json:"nazionalita"`
	Nome            string              `json:"nome"`

	// PartitaIva Obbligatorio se forma giuridica
	PartitaIva     *string `json:"partita_iva,omitempty"`
	RagioneSociale *string `json:"ragione_sociale,omitempty"`
	Sesso          *string `json:"sesso,omitempty"`
	Stato          string  `json:"stato"`
}

// ClienteCreato defines model for ClienteCreato.
type ClienteCreato struct {
	CodiceCliente int64 `json:"codice_cliente"`
}

// CodiceRID defines model for CodiceRID.
type CodiceRID struct {
	// CodiceAbi Presente se tipo_transazione è di tipo Domiciliazione e pagamento con conto
	CodiceAbi *string `json:"codice_abi,omitempty"`

	// CodiceAutorizzazioneGt Obbligatorio se tipo_transazione contiene uno dei valori seguenti: Pagamento o Domiciliazione in caso di operazione effettuata con carta di Credito o Debito Internazionale
	CodiceAutorizzazioneGt *string `json:"codice_autorizzazione_gt,omitempty"`

	// CodiceAutorizzazioneRid Obbligatorio se tipo_transazione è di tipo Domiciliazione
	CodiceAutorizzazioneRid *string `json:"codice_autorizzazione_rid,omitempty"`

	// CodiceSia Preente se tipo_transazione è di tipo Domiciliazione e pagamento con carta
	CodiceSia *string `json:"codice_sia,omitempty"`

	// HashPan Obblgatorio per Domiciliazione con carte di credito
	HashPan *string `json:"hash_pan,omitempty"`

	// TipologiaCarta Obbligatorio se tipo_transazione è di tipo Domiciliazione
	TipologiaCarta *string `json:"tipologia_carta,omitempty"`
}

// Consenso defines model for Consenso.
type Consenso struct {
	// Codice md = marketing indiretti, pr = profilazione, t1 =  servizio memo 1, t2 = servizio memo 2
	Codice string `json:"codice"`
	Valore bool   `json:"valore"`
}

// Contratto defines model for Contratto.
type Contratto struct {
	CodiceCliente     *int64              `json:"codice_cliente,omitempty"`
	CodiceContratto   *int64              `json:"codice_contratto,omitempty"`
	CodiceInterno     int64               `json:"codice_interno"`
	CodiceModulo      string              `json:"codice_modulo"`
	CodiceUtente      int64               `json:"codice_utente"`
	DataApertura      openapi_types.Date  `json:"data_apertura"`
	DataChiusura      *openapi_types.Date `json:"data_chiusura,omitempty"`
	Matricola         string              `json:"matricola"`
	ModalitaPagamento ModalitaPagamento   `json:"modalita_pagamento"`
	Nickname          *string             `json:"nickname,omitempty"`
	Stato             StatoContratto      `json:"stato"`
	Tipo              *TipoContratto      `json:"tipo,omitempty"`
	TipoProdotto      *TipoProdotto       `json:"tipo_prodotto,omitempty"`
}

// ContrattoCreato defines model for ContrattoCreato.
type ContrattoCreato struct {
	CodiceContratto int64 `json:"codice_contratto"`
}

// ContrattoFirmato defines model for ContrattoFirmato.
type ContrattoFirmato struct {
	CodiceContratto int64 `json:"codice_contratto"`

	// CodiceTitolo Obbligatorio se tipo_documento = UCT
	CodiceTitolo *int64  `json:"codice_titolo,omitempty"`
	Contratto    *string `json:"contratto,omitempty"`

	// NumeroModulo Obbligatorio se tipo_documento = UCT
	NumeroModulo  *string `json:"numero_modulo,omitempty"`
	TipoDocumento string  `json:"tipo_documento"`
}

// CreaCliente defines model for CreaCliente.
type CreaCliente struct {
	Cellulare *Cellulare `json:"cellulare,omitempty"`

	// CodiceFiscale Obbligatorio per persone fisiche
	CodiceFiscale  *string   `json:"codice_fiscale,omitempty"`
	Cognome        string    `json:"cognome"`
	Email          *Email    `json:"email,omitempty"`
	FormaGiuridica string    `json:"forma_giuridica"`
	Indirizzo      Indirizzo `json:"indirizzo"`
	Nazionalita    *string   `json:"nazionalita,omitempty"`
	Nome           string    `json:"nome"`

	// PartitaIva Obbligatorio per persone giuridiche
	PartitaIva *string `json:"partita_iva,omitempty"`

	// RagioneSociale Obbligatorio per soggetti con partita iva
	RagioneSociale *string `json:"ragione_sociale,omitempty"`
}

// DettaglioContratto defines model for DettaglioContratto.
type DettaglioContratto struct {
	AttivazioneDispositivoAggiuntivo *bool               `json:"attivazione_dispositivo_aggiuntivo,omitempty"`
	Contratto                        Contratto           `json:"contratto"`
	DataAssociazioneDocumento        *openapi_types.Date `json:"data_associazione_documento,omitempty"`
	Dispositivi                      *[]Dispositivo      `json:"dispositivi,omitempty"`
	DocumentoAssociato               bool                `json:"documento_associato"`
}

// DisattivazioneApparato defines model for DisattivazioneApparato.
type DisattivazioneApparato struct {
	CodiceTitolo int64 `json:"codice_titolo"`
}

// DisattivazioneOpzione defines model for DisattivazioneOpzione.
type DisattivazioneOpzione struct {
	CodiceOpzione          *string             `json:"codice_opzione,omitempty"`
	CodiceTitolo           int64               `json:"codice_titolo"`
	DataAttivazione        *openapi_types.Date `json:"data_attivazione,omitempty"`
	DisattivaAssicurazione *bool               `json:"disattiva_assicurazione,omitempty"`
}

// Dispositivo defines model for Dispositivo.
type Dispositivo struct {
	AssicurazioneAttiva   *bool               `json:"assicurazione_attiva,omitempty"`
	CodiceApparato        string              `json:"codice_apparato"`
	CodiceTitolo          int64               `json:"codice_titolo"`
	Coupon                *string             `json:"coupon,omitempty"`
	DispositivoPrincipale *bool               `json:"dispositivo_principale,omitempty"`
	ListaOpzioni          *[]Opzione          `json:"lista_opzioni,omitempty"`
	StatoApparatoDto      StatoApparatoDto    `json:"stato"`
	StatoAutorizzazione   StatoAutorizzazione `json:"stato_autorizzazione"`
	Targhe                *[]Targa            `json:"targhe,omitempty"`
	Tipo                  Tipo                `json:"tipo"`
}

// DocumentoIdentita defines model for DocumentoIdentita.
type DocumentoIdentita struct {
	DataRilascio     openapi_types.Date `json:"data_rilascio"`
	DataScadenza     openapi_types.Date `json:"data_scadenza"`
	EnteRilascio     string             `json:"ente_rilascio"`
	LocalitaRilascio string             `json:"localita_rilascio"`
	Nazione          string             `json:"nazione"`
	Numero           string             `json:"numero"`
	Scansione        Scansione          `json:"scansione"`
	TipoDocumento    string             `json:"tipo_documento"`
}

// Email defines model for Email.
type Email struct {
	Certificato bool                `json:"certificato"`
	Email       openapi_types.Email `json:"email"`
}

// Errore defines model for Errore.
type Errore struct {
	Codice    string    `json:"codice"`
	Dettaglio *[]string `json:"dettaglio,omitempty"`
	Messaggio *string   `json:"messaggio,omitempty"`
}

// Esito defines model for Esito.
type Esito struct {
	Esito     *string `json:"esito,omitempty"`
	Messaggio *string `json:"messaggio,omitempty"`
}

// EsitoCheckCoupon defines model for EsitoCheckCoupon.
type EsitoCheckCoupon struct {
	Promozioni *[]Promozione `json:"promozioni,omitempty"`
}

// Indirizzo defines model for Indirizzo.
type Indirizzo struct {
	Cap           string  `json:"cap"`
	Citta         string  `json:"citta"`
	Denominazione *string `json:"denominazione,omitempty"`
	Indirizzo     string  `json:"indirizzo"`

	// Nazione Codice nazione formato ISO alpha 2
	Nazione string `json:"nazione"`

	// Provincia Obbligatorio solo se nazione Italia
	Provincia *string `json:"provincia,omitempty"`
}

// ModalitaPagamento defines model for ModalitaPagamento.
type ModalitaPagamento struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// Opzione defines model for Opzione.
type Opzione struct {
	Codice      *string             `json:"codice,omitempty"`
	DataFine    *openapi_types.Date `json:"data_fine,omitempty"`
	DataInizio  *openapi_types.Date `json:"data_inizio,omitempty"`
	TipoOpzione *TipoOpzione        `json:"tipo_opzione,omitempty"`
}

// OpzioneAttivata defines model for OpzioneAttivata.
type OpzioneAttivata struct {
	NumeroModulo *string `json:"numero_modulo,omitempty"`
}

// Promozione defines model for Promozione.
type Promozione struct {
	Codice      *string             `json:"codice,omitempty"`
	Descrizione *string             `json:"descrizione,omitempty"`
	Fine        *openapi_types.Date `json:"fine,omitempty"`
	Inizio      *openapi_types.Date `json:"inizio,omitempty"`
	Tipo        *string             `json:"tipo,omitempty"`
}

// Scansione defines model for Scansione.
type Scansione struct {
	// ContenutoFronte Contenuto file in formato Base64
	ContenutoFronte string `json:"contenuto_fronte"`

	// ContenutoRetro Contenuto file in formato Base64
	ContenutoRetro string `json:"contenuto_retro"`

	// MimeTypeFronte Formato file scansionato (es. pdf)
	MimeTypeFronte string `json:"mime_type_fronte"`

	// MimeTypeRetro Formato file scansionato (es. pdf)
	MimeTypeRetro string `json:"mime_type_retro"`
}

// SostituzioneApparato defines model for SostituzioneApparato.
type SostituzioneApparato struct {
	AssicurazioneAttiva   *bool   `json:"assicurazione_attiva,omitempty"`
	CodiceNuovoApparato   int64   `json:"codice_nuovo_apparato"`
	CodicePromozione      *string `json:"codice_promozione,omitempty"`
	CodiceVecchioApparato int64   `json:"codice_vecchio_apparato"`
	Coupon                *string `json:"coupon,omitempty"`
	TipoOpzione           *string `json:"tipo_opzione,omitempty"`
}

// StatoApparatoDto defines model for StatoApparato.
type StatoApparatoDto struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// StatoAutorizzazione defines model for StatoAutorizzazione.
type StatoAutorizzazione struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// StatoContratto defines model for StatoContratto.
type StatoContratto struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// Targa defines model for Targa.
type Targa struct {
	CodiceNazione string `json:"codice_nazione"`
	Numero        string `json:"numero"`
}

// TelepassAggiunto defines model for TelepassAggiunto.
type TelepassAggiunto struct {
	Codice       *int64  `json:"codice,omitempty"`
	NumeroModulo *string `json:"numero_modulo,omitempty"`
}

// Tipo defines model for Tipo.
type Tipo struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// TipoContratto defines model for TipoContratto.
type TipoContratto struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// TipoOpzione defines model for TipoOpzione.
type TipoOpzione struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// TipoProdotto defines model for TipoProdotto.
type TipoProdotto struct {
	Codice      *string `json:"codice,omitempty"`
	Descrizione *string `json:"descrizione,omitempty"`
}

// Titolo defines model for Titolo.
type Titolo struct {
	AssicurazioneAttiva   *bool   `json:"assicurazione_attiva,omitempty"`
	CodiceApparato        string  `json:"codice_apparato"`
	CodicePromozione      *string `json:"codice_promozione,omitempty"`
	Coupon                *string `json:"coupon,omitempty"`
	DispositivoPrincipale bool    `json:"dispositivo_principale"`

	// StatoApparato 01 distribuito, 02 = non distribuito, 03 = smarrito/rubato, 04 spedito
	StatoApparato *string `json:"stato_apparato,omitempty"`
	Targhe        []Targa `json:"targhe"`

	// TipoApparato am= telepass europeo, at = apparato telepass
	TipoApparato string  `json:"tipo_apparato"`
	TipoOpzione  *string `json:"tipo_opzione,omitempty"`
}

// IdEnteResponsabile defines model for idEnteResponsabile.
type IdEnteResponsabile = string

// IdGestore defines model for idGestore.
type IdGestore = string

// IdPostazione defines model for idPostazione.
type IdPostazione = string

// CheckCouponParams defines parameters for CheckCoupon.
type CheckCouponParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CheckGaranziaParams defines parameters for CheckGaranzia.
type CheckGaranziaParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CheckGaranziaDeferredParams defines parameters for CheckGaranziaDeferred.
type CheckGaranziaDeferredParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CheckIbanParams defines parameters for CheckIban.
type CheckIbanParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CheckModuloParams defines parameters for CheckModulo.
type CheckModuloParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CheckTargaParams defines parameters for CheckTarga.
type CheckTargaParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CreaClienteParams defines parameters for CreaCliente.
type CreaClienteParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// AggiornaClienteParams defines parameters for AggiornaCliente.
type AggiornaClienteParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// GetByCodiceFiscaleParams defines parameters for GetByCodiceFiscale.
type GetByCodiceFiscaleParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// AttivazioneContrattoParams defines parameters for AttivazioneContratto.
type AttivazioneContrattoParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// GetFirmaContrattoParams defines parameters for GetFirmaContratto.
type GetFirmaContrattoParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// GetDettaglioContrattoParams defines parameters for GetDettaglioContratto.
type GetDettaglioContrattoParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// AggiungiTelepassParams defines parameters for AggiungiTelepass.
type AggiungiTelepassParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// DisattivaTelepassParams defines parameters for DisattivaTelepass.
type DisattivaTelepassParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// SostituisciTelepassParams defines parameters for SostituisciTelepass.
type SostituisciTelepassParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// AttivaOpzioniParams defines parameters for AttivaOpzioni.
type AttivaOpzioniParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// DisattivaOpzioneParams defines parameters for DisattivaOpzione.
type DisattivaOpzioneParams struct {
	// XTelepassIdGestore Id dell’Ente Gestore (assegnato da Telepass)
	XTelepassIdGestore IdGestore `json:"X-Telepass-Id-Gestore"`

	// XTelepassIdEnteResponsabile Id dell’Ente Responsabile (assegnato da Telepass)
	XTelepassIdEnteResponsabile IdEnteResponsabile `json:"X-Telepass-Id-Ente-Responsabile"`

	// XTelepassIdPostazione Codice identificativo del Punto di Ritiro
	XTelepassIdPostazione IdPostazione `json:"X-Telepass-Id-Postazione"`
}

// CheckCouponJSONRequestBody defines body for CheckCoupon for application/json ContentType.
type CheckCouponJSONRequestBody = CheckCoupon

// CheckGaranziaJSONRequestBody defines body for CheckGaranzia for application/json ContentType.
type CheckGaranziaJSONRequestBody = CheckGaranzia

// CheckGaranziaDeferredJSONRequestBody defines body for CheckGaranziaDeferred for application/json ContentType.
type CheckGaranziaDeferredJSONRequestBody = CheckGaranziaDeferred

// CheckIbanJSONRequestBody defines body for CheckIban for application/json ContentType.
type CheckIbanJSONRequestBody = CheckIban

// CheckModuloJSONRequestBody defines body for CheckModulo for application/json ContentType.
type CheckModuloJSONRequestBody = CheckModulo

// CheckTargaJSONRequestBody defines body for CheckTarga for application/json ContentType.
type CheckTargaJSONRequestBody = CheckTarga

// CreaClienteJSONRequestBody defines body for CreaCliente for application/json ContentType.
type CreaClienteJSONRequestBody = CreaCliente

// AggiornaClienteJSONRequestBody defines body for AggiornaCliente for application/json ContentType.
type AggiornaClienteJSONRequestBody = AggiornaCliente

// AttivazioneContrattoJSONRequestBody defines body for AttivazioneContratto for application/json ContentType.
type AttivazioneContrattoJSONRequestBody = AttivazioneContratto

// GetFirmaContrattoJSONRequestBody defines body for GetFirmaContratto for application/json ContentType.
type GetFirmaContrattoJSONRequestBody = ContrattoFirmato

// AggiungiTelepassJSONRequestBody defines body for AggiungiTelepass for application/json ContentType.
type AggiungiTelepassJSONRequestBody = AggiungiTelepass

// DisattivaTelepassJSONRequestBody defines body for DisattivaTelepass for application/json ContentType.
type DisattivaTelepassJSONRequestBody = DisattivazioneApparato

// SostituisciTelepassJSONRequestBody defines body for SostituisciTelepass for application/json ContentType.
type SostituisciTelepassJSONRequestBody = SostituzioneApparato

// AttivaOpzioniJSONRequestBody defines body for AttivaOpzioni for application/json ContentType.
type AttivaOpzioniJSONRequestBody = AttivazioneOpzioni

// DisattivaOpzioneJSONRequestBody defines body for DisattivaOpzione for application/json ContentType.
type DisattivaOpzioneJSONRequestBody = DisattivazioneOpzione
